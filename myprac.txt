.gitignore = '커밋 또는 깃헙에 커밋 후 푸쉬과정에서 따로 제외시키고 싶은 파일들을 gitignore에 작성하여
제외 시킬 수 있다. // 따로 공개를 원하지 않는 파일들을 제외시킬 때 사용한다고 한다.

=====================================================================================================
npm init / npm install express // node_modules

npm init 시 package.json 파일이 생성되며 해당 파일에서 내가 설치한 모듈들을 확인 할 수 있다. 그리고 package.json 파일만 있다면 해당 파일에 설치된 모듈들을 npm install package.json 명령어로 한번에 전부 설치가 가능하다.

express 로 서버를 작동시키기 위해서 express 모듈을 따로 설치해야 하며 설치 방법은 npm install express
npm install '모듈명' 을 사용하여 다른 모듈들도 추가로 설치가 가능하다.

node_modules 폴더는 모듈을 처음 설치할 때 생성이 되며 사용 가능한 모듈들이 담겨있는 폴더이다. js에서 클래스에 변수들을 담아 꺼내 사용하는 느낌처럼 node_modules에 담겨진 모듈들을 우리가 쉽게 사용가능하다.

=====================================================================================================

모든 모듈을 설치하였다면 이제 main.js 파일로 이동하여 모듈을 사용하겠다 선언 후 나만의 웹서버를 열어볼 수 있다.
여는 방법은 main.js 1~3번째 줄 확인해보면 된다.

또한 열심히 main.js 에서 웹서버를 열 수 있는 코드를 작성하였다면 해당 파일을 실행하는 방법은
터미널창에서 node '파일명' 이란 명령어를 사용하여 열 수 있다.  본인은   node main.js   타이핑하여 실행하였다.
정상적으로 실행 시 터미널창에서 server.start 라는 항목을 확인해 볼 수 있다.

node '파일명' 명령어로 실행 시 우리가 추가적으로 수정한 걸 서버에 반영하기 위해선 맥 기준 control+c 를 눌러 웹서버를 종료 후 
다시 node '파일명' 으로 재 실행해야만 변경사항이 적용된다.
=====================================================================================================

매번 수정하고 서버를 종료했다가 다시 실행 하여 확인하기엔 번거롭다 보니 본인은 nodemon 이라는 모듈을 설치하여 사용하였다,
설치 방법은 위 설명한듯이 npm install nodemon 이며 뒤에 -g를작성해준다면 글로벌이란 의미로 npm install nodemon -g 로 설치 시 다른 node 웹서버를 만들 때 nodemon 모듈을 설치 하지 않아도 사용이 가능하다.

이제 nodemon 모듈을 설치하였다면 사용 방법은 기존 node main.js 가 아닌 nodemon main.js 로 서버 실행하면 된다.
실행 후 main.js 에서 수정사항이 발생 시 수정하고 저장만 해준다면 알아서 서버가 종료 하였다가 바로 재실행이 된다.

